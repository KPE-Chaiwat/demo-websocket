// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/api/mqtt/connect": {
            "post": {
                "description": "Connects the Go Fiber API to Primus MQTT broker and subscribes to topic",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "MQTT"
                ],
                "summary": "Connect to MQTT broker",
                "parameters": [
                    {
                        "description": "MQTT Config",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/main.ConnectRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/main.ConnectResponse"
                        }
                    }
                }
            }
        },
        "/api/mqtt/disconnect": {
            "post": {
                "description": "Disconnects from Primus MQTT broker and closes all WebSocket connections",
                "tags": [
                    "MQTT"
                ],
                "summary": "Disconnect MQTT",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/main.DisconnectResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "main.ConnectRequest": {
            "type": "object",
            "properties": {
                "client_id": {
                    "type": "string",
                    "example": "client_SwbZNsTGv9VCelur"
                },
                "password": {
                    "type": "string",
                    "example": "1234567"
                },
                "server": {
                    "type": "string",
                    "example": "primus-cloud.com"
                },
                "topic": {
                    "type": "string",
                    "example": "RXEFiNP8lB/#"
                },
                "username": {
                    "type": "string",
                    "example": "Primus"
                }
            }
        },
        "main.ConnectResponse": {
            "type": "object",
            "properties": {
                "status": {
                    "type": "string",
                    "example": "connected"
                },
                "topic": {
                    "type": "string",
                    "example": "RXEFiNP8lB/#"
                }
            }
        },
        "main.DisconnectResponse": {
            "type": "object",
            "properties": {
                "status": {
                    "type": "string",
                    "example": "disconnected"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:8080",
	BasePath:         "/",
	Schemes:          []string{},
	Title:            "Primus MQTT API",
	Description:      "Fiber API ที่เชื่อมต่อ Primus MQTT Broker แล้วส่งต่อผ่าน WebSocket",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
